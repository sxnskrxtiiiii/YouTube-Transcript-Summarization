{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1440,
        -520
      ],
      "id": "a6c4859b-eb24-4c36-bebe-61d4f9c39402",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1psVG22KxsphDro5qrf8yIBa2TI4BtZKbcxkJ5BDTQqk",
          "mode": "list",
          "cachedResultName": "Youtube Description",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1psVG22KxsphDro5qrf8yIBa2TI4BtZKbcxkJ5BDTQqk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1psVG22KxsphDro5qrf8yIBa2TI4BtZKbcxkJ5BDTQqk/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "NEXT"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -1220,
        -520
      ],
      "id": "f5dcda1a-3300-4afa-ac5f-52a054a39fc8",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "08EKA246gvIYQzJL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1000,
        -520
      ],
      "id": "11e2a16c-4c36-4cb9-a341-af553688a8ab",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d34a5426-8a1b-4974-b7bb-f49dacaa3d18",
              "name": "Video Link",
              "value": "={{ $json['Video Link'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -800,
        -280
      ],
      "id": "e31d598b-26a0-43d3-a478-a1ac438cef8f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "\nreturn items.map(item => {\n  const videoLink = item.json[\"Video Link\"];\n  const match = videoLink.match(/(?:v=|\\/)([0-9A-Za-z_-]{11})/);\n\n  const videoId = match ? match[1] : null;\n\n  return {\n    json: {\n      \"Video Link\": videoLink,\n      \"video_id\": videoId\n  ¬†¬†}\n¬†¬†};\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        -280
      ],
      "id": "4e71b007-5a29-4969-95ce-b8a748f27ad4",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "https://youtube-video-summarizer-gpt-ai.p.rapidapi.com/api/v1/get-transcript-v2",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "video_id",
              "value": "={{ $json.video_id }}"
            },
            {
              "name": "platform",
              "value": "youtube"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "youtube-video-summarizer-gpt-ai.p.rapidapi.com"
            },
            {
              "name": "x-rapidapi-key",
              "value": "02aa2139demsh978cb48e1adaa43p131f8ejsn4beedefd6dbf"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -360,
        -280
      ],
      "id": "7565935f-4c6b-4a73-a343-417f18e08c32",
      "name": "Get Transcripts"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f62bca7e-0043-45a0-b10e-7808bd108558",
              "name": "data.transcripts",
              "value": "={{ $json.data.transcripts}}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        -280
      ],
      "id": "911a1df2-c2de-4982-abe7-41c47aa61b65",
      "name": "Extract Transcripts"
    },
    {
      "parameters": {
        "jsCode": "const transcripts = $json.data.transcripts;\nlet combinedTranscript = '';\n\nfor (const langKey in transcripts) {\n  const customChunks = transcripts[langKey]?.custom || [];\n  for (const chunk of customChunks) {\n    if (chunk.text) {\n      combinedTranscript += chunk.text.trim() + ' ';\n    }\n  }\n}\n\nreturn [\n  {\n    json: {\n      transcript: combinedTranscript.trim()\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        -280
      ],
      "id": "715949d2-1836-433b-a3b1-7322764efaf5",
      "name": "Combined Transcripts"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.transcript }}",
        "messages": {
          "messageValues": [
            {
              "message": "=YOU ARE AGENT : THE WORLD'S LEADING EXPERT IN YOUTUBE VIDEO DESCRIPTIONS & SEO META TAGS\nInternationally recognized for crafting high-converting, algorithm-optimized YouTube video descriptions, your job is to turn summarized transcripts or video content into descriptions that boost discoverability, increase CTR, and keep viewers engaged. You also generate relevant SEO meta tags and hashtags that help the video rank better in search.\n\n‚úÖ INSTRUCTIONS\nUse a compelling hook in the first 1-2 lines ‚Äì this is what appears above the fold and needs to grab attention immediately.\n\nSummarize the video content clearly and naturally in 3-6 sentences ‚Äì keep it audience-friendly and informative.\n\nInclude CTA lines like \"Subscribe,\" \"Watch next,\" \"Join the community,\" etc.\n\nInclude 2 blocks at the end:\n\nSEO Meta Tags (comma-separated keywords)\n\nHashtags (in YouTube-friendly format) but don't mention 'hastags' in your final output\n\nüß† CHAIN OF THOUGHTS\nANALYZE THE VIDEO SUMMARY OR TRANSCRIPT\n\nUnderstand the topic, tone, and value for the viewer.\n\nIdentify keywords and content highlights.\n\nCRAFT A DESCRIPTION\n\nHook first: a powerful sentence or relatable question.\n\nOverview: what the viewer will learn or gain.\n\nContent breakdown: any notable moments or segments.\n\nEngagement prompts: ask for likes, subs, or comments.\n\nSEO OPTIMIZATION\n\nUse relevant, high-ranking keywords naturally.\n\nCreate a separate list of tags to improve search indexing.\n\nInclude niche-specific hashtags and trends.\n\nFORMAT FOR YOUTUBE\n\nMake sure the first 2 lines are click-worthy.\n\nUse line breaks to improve readability.\n\nPlace SEO tags at the end, not in the main paragraph.\n\n‚ùå WHAT NOT TO DO\nDon't start with boring or vague intros like \"In this video...\"\n\nDon't skip SEO tags, hashtags, or CTAs.\n\nDon't stuff keywords unnaturally ‚Äì keep it human-readable.\n\nDon't write bulky, unstructured paragraphs.\n\nDon't reuse the same description format every time ‚Äì customize!\n\nüí° FEW-SHOT EXAMPLE\nüëæ Input Summary:\n\"A 10-minute video explaining how to use ChatGPT with Airtable and automate workflows using N8N. It includes a live demo, error handling tips, and integration examples for business use.\"\n\nüìÑ Output Description:\nWant to automate your business using ChatGPT? This video shows you EXACTLY how to do it ‚Äì step-by-step! üí°\n\nIn this quick tutorial, you'll learn how to:\n\nConnect ChatGPT to Airtable\n\nAutomate workflows using N8N\n\nHandle errors like a pro\n\nUse real business case examples to scale your productivity\n\nüìå Whether you're a no-code beginner or a workflow\nwizard, this guide breaks it down in a simple, clear way.\nWatch till the end for advanced bonus tips!\n\nüëç Like, Share, and Subscribe for weekly AI and\nautomation hacks.\nüîî Turn on the bell to stay ahead of the game.\n\n\nüîé SEO Tags:\nchatgpt automation, n8n tutorial, airtable workflow, ai business tools, openai automation, no code automations, chatgpt n8n integration\n\nüì≤ Hashtags:\n#ChatGPT #Airtable #N8N #AutomationTutorial #NoCodeAI #WorkflowHacks\n\nWhatever the language of the transcription is I want you to give me the description in English only"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        300,
        -280
      ],
      "id": "5788d4ce-ab33-4ad7-b0eb-4b3565972c86",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        180,
        -40
      ],
      "id": "767af6f6-f014-44b4-9588-7ba919686ca5",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Gw7y35vl0Grv8nuO",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        820,
        -40
      ],
      "id": "d796ebab-c66d-4ab9-90e5-b46200c968ac",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Gw7y35vl0Grv8nuO",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const rawText = item.json.text;\n\n  const cleanedText = rawText\n    .replace(/\\n/g, ' ')       // Replace all \\n with space\n    .replace(/\\s+/g, ' ')      // Normalize multiple spaces to single space\n    .trim();                   // Trim leading/trailing whitespace\n\n  return {\n    json: {\n      cleanedText\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        -280
      ],
      "id": "863131f0-d59c-4259-8936-78dd490ffd47",
      "name": "Manage 1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const raw = item.json.output;\n\n  // Split by line breaks and clean each\n  const titles = raw\n    .split('\\n')\n    .map(t => t.trim())\n    .filter(t => t.length > 0); // Remove empty lines\n\n  return {\n    json: {\n      titles\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        -280
      ],
      "id": "7c58ffc7-3c86-4096-b4c6-b3bca52d9859",
      "name": "Manage 2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.cleanedText }}\nYou are a professional YouTube strategist. Based on the transcript I provide, generate 10 catchy and SEO-optimized YouTube title suggestions. Do not add any introductory text, markdown, bullet points, or backslashes. Just return the 10 titles in plain text format, each on a new line without numbering or special characters. Use good emojis make the suggestions more catchy and pleasant to ears...give in numbered formate not /n format\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        880,
        -280
      ],
      "id": "b01c27a8-3100-43f4-8433-1e7ffbd2a4a0",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1psVG22KxsphDro5qrf8yIBa2TI4BtZKbcxkJ5BDTQqk",
          "mode": "list",
          "cachedResultName": "Youtube Description",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1psVG22KxsphDro5qrf8yIBa2TI4BtZKbcxkJ5BDTQqk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1psVG22KxsphDro5qrf8yIBa2TI4BtZKbcxkJ5BDTQqk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "DONE",
            "Description": "={{ $('Manage 1').item.json.cleanedText }}",
            "Title Ideas": "={{ $json.titles }}",
            "Video Link": "={{ $('Edit Fields').item.json['Video Link'] }}"
          },
          "matchingColumns": [
            "Video Link"
          ],
          "schema": [
            {
              "id": "Video Link",
              "displayName": "Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title Ideas",
              "displayName": "Title Ideas",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1440,
        40
      ],
      "id": "0fd6bae7-9581-4b41-aacd-88de9e431b6a",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "08EKA246gvIYQzJL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "sanskriti0802k@gmail.com",
        "subject": "Your Video Transcription is ready.",
        "emailType": "text",
        "message": "={{ $('Manage 1').item.json.cleanedText }}\n\nTitles:\n{{ $json.titles }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1480,
        -540
      ],
      "id": "86df363f-55cd-477e-9240-16d4e217d718",
      "name": "Send a message",
      "webhookId": "977ffcd2-a638-4d17-85b9-f32400c4a680",
      "credentials": {
        "gmailOAuth2": {
          "id": "4smyOsPkZnFgQHTm",
          "name": "Gmail account"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get Transcripts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Transcripts": {
      "main": [
        [
          {
            "node": "Extract Transcripts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Transcripts": {
      "main": [
        [
          {
            "node": "Combined Transcripts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combined Transcripts": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Manage 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Manage 1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manage 2": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Manage 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}